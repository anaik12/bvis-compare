
"use strict";

/* Get or create the application global variable */
var App = App || {};

var lineChart1 = function() {
// document.onload = linechart();

// window.onload = function linechart(){
//   var w = document.getElementById("linechart").clientWidth; 
// var h = document.getElementById("linechart").clientHeight; 
  var publiclyAvailable = {

  render: function() {
      var w = 560;
      var h = 500;

      console.log(typeof(200));

      var margin = {top: 20, right: 20, bottom: 30, left: 50},
          width = w - margin.left - margin.right,
          height = h - margin.top - margin.bottom;

      // parse the date / time
      var parseTime = d3.timeParse("%d-%b-%y");

      // set the ranges
      var x = d3.scaleTime().range([0, width]);
      var y = d3.scaleLinear().range([height, 0]);

      // define the line
      var valueline = d3.line()
          .x(function(d) { return x(d.date); })
          .y(function(d) { return y(d.close); });

      // append the svg obgect to the body of the page
      // appends a 'group' element to 'svg'
      // moves the 'group' element to the top left margin
      var svg = d3.select(".lineDiv").append("svg")
          .attr("width", width + margin.left + margin.right)
          .attr("height", height + margin.top + margin.bottom)
        .append("g")
          .attr("transform",
                "translate(" + margin.left + "," + margin.top + ")");
      // console.log(x,y);
      // Get the data
      d3.csv("data/data.csv", function(error, data) {
        if (error) throw error;
        // console.log("data",data);
        // format the data
        data.forEach(function(d) {
            d.date = parseTime(d.date);
            d.close = +d.close;
        });

        // Scale the range of the data
        x.domain(d3.extent(data, function(d) { return d.date; }));
        y.domain([0, d3.max(data, function(d) { return d.close; })]);

        // Add the valueline path.
        svg.append("path")
            .data([data])
            .attr("class", "line")
            .attr("d", valueline)
            .attr("stroke", "2px solid white");

        // Add the X Axis
        svg.append("g")
          .attr("class","axisRed")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(x));


        // Add the Y Axis
        svg.append("g")
            .attr("class","axisRed")
            .call(d3.axisLeft(y));

            console.log("height",height);

      });
      }


  };

  return publiclyAvailable;


  };

// }